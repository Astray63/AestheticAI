# Configuration Docker simplifiée pour développement

services:
  # ==================== DATABASE ====================
  postgres:
    image: postgres:15-alpine
    container_name: aesthetic_postgres_dev
    environment:
      POSTGRES_DB: aesthetic_db
      POSTGRES_USER: aesthetic_user
      POSTGRES_PASSWORD: aesthetic_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - aesthetic_dev_network

  # ==================== BACKEND ====================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: aesthetic_backend_dev
    environment:
      - DATABASE_URL=postgresql://aesthetic_user:aesthetic_password@postgres:5432/aesthetic_db
      - SECRET_KEY=dev-secret-key
      - USE_GPU=false
      - OPENCV_IO_ENABLE_OPENEXR=1
      - QT_QPA_PLATFORM=offscreen
    volumes:
      - ./backend:/app
      - backend_dev_uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - aesthetic_dev_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # ==================== FRONTEND ====================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: aesthetic_frontend_dev
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - aesthetic_dev_network
    command: npm start

volumes:
  postgres_dev_data:
    driver: local
  backend_dev_uploads:
    driver: local

networks:
  aesthetic_dev_network:
    driver: bridge
